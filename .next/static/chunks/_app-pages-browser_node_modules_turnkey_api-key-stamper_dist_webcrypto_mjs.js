"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_turnkey_api-key-stamper_dist_webcrypto_mjs"],{

/***/ "(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/utils.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@turnkey/api-key-stamper/dist/utils.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertTurnkeyApiKeyToJwk: () => (/* binding */ convertTurnkeyApiKeyToJwk)\n/* harmony export */ });\n/* harmony import */ var _tink_elliptic_curves_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tink/elliptic_curves.mjs */ \"(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/tink/elliptic_curves.mjs\");\n/* harmony import */ var _turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turnkey/encoding */ \"(app-pages-browser)/./node_modules/@turnkey/encoding/dist/index.mjs\");\n\n\n\nfunction convertTurnkeyApiKeyToJwk(input) {\n    const { uncompressedPrivateKeyHex, compressedPublicKeyHex } = input;\n    const jwk = (0,_tink_elliptic_curves_mjs__WEBPACK_IMPORTED_MODULE_0__.pointDecode)((0,_turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayFromHexString)(compressedPublicKeyHex));\n    // Ensure that d is sufficiently padded\n    jwk.d = (0,_turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__.hexStringToBase64url)(uncompressedPrivateKeyHex, _turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_JWK_MEMBER_BYTE_LENGTH);\n    return jwk;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdHVybmtleS9hcGkta2V5LXN0YW1wZXIvZGlzdC91dGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlEO0FBQ3lEOztBQUVsSDtBQUNBLFlBQVksb0RBQW9EO0FBQ2hFLGdCQUFnQixzRUFBVyxDQUFDLDBFQUF1QjtBQUNuRDtBQUNBLFlBQVksdUVBQW9CLDRCQUE0Qiw2RUFBOEI7QUFDMUY7QUFDQTs7QUFFcUM7QUFDckMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2FjaGFcXFRlc3RcXGV0aGdsXFxub2RlX21vZHVsZXNcXEB0dXJua2V5XFxhcGkta2V5LXN0YW1wZXJcXGRpc3RcXHV0aWxzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwb2ludERlY29kZSB9IGZyb20gJy4vdGluay9lbGxpcHRpY19jdXJ2ZXMubWpzJztcbmltcG9ydCB7IHVpbnQ4QXJyYXlGcm9tSGV4U3RyaW5nLCBoZXhTdHJpbmdUb0Jhc2U2NHVybCwgREVGQVVMVF9KV0tfTUVNQkVSX0JZVEVfTEVOR1RIIH0gZnJvbSAnQHR1cm5rZXkvZW5jb2RpbmcnO1xuXG5mdW5jdGlvbiBjb252ZXJ0VHVybmtleUFwaUtleVRvSndrKGlucHV0KSB7XG4gICAgY29uc3QgeyB1bmNvbXByZXNzZWRQcml2YXRlS2V5SGV4LCBjb21wcmVzc2VkUHVibGljS2V5SGV4IH0gPSBpbnB1dDtcbiAgICBjb25zdCBqd2sgPSBwb2ludERlY29kZSh1aW50OEFycmF5RnJvbUhleFN0cmluZyhjb21wcmVzc2VkUHVibGljS2V5SGV4KSk7XG4gICAgLy8gRW5zdXJlIHRoYXQgZCBpcyBzdWZmaWNpZW50bHkgcGFkZGVkXG4gICAgandrLmQgPSBoZXhTdHJpbmdUb0Jhc2U2NHVybCh1bmNvbXByZXNzZWRQcml2YXRlS2V5SGV4LCBERUZBVUxUX0pXS19NRU1CRVJfQllURV9MRU5HVEgpO1xuICAgIHJldHVybiBqd2s7XG59XG5cbmV4cG9ydCB7IGNvbnZlcnRUdXJua2V5QXBpS2V5VG9Kd2sgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/utils.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/webcrypto.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@turnkey/api-key-stamper/dist/webcrypto.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signWithApiKey: () => (/* binding */ signWithApiKey)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/utils.mjs\");\n/* harmony import */ var _turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turnkey/encoding */ \"(app-pages-browser)/./node_modules/@turnkey/encoding/dist/index.mjs\");\n\n\n\n/// <reference lib=\"dom\" />\nconst signWithApiKey = async (input) => {\n    const { content, publicKey, privateKey } = input;\n    const key = await importTurnkeyApiKey({\n        uncompressedPrivateKeyHex: privateKey,\n        compressedPublicKeyHex: publicKey,\n    });\n    return await signMessage({ key, content });\n};\nasync function importTurnkeyApiKey(input) {\n    const { uncompressedPrivateKeyHex, compressedPublicKeyHex } = input;\n    const jwk = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.convertTurnkeyApiKeyToJwk)({\n        uncompressedPrivateKeyHex,\n        compressedPublicKeyHex,\n    });\n    return await crypto.subtle.importKey(\"jwk\", jwk, {\n        name: \"ECDSA\",\n        namedCurve: \"P-256\",\n    }, false, // not extractable\n    [\"sign\"] // allow signing\n    );\n}\nasync function signMessage(input) {\n    const { key, content } = input;\n    const signatureIeee1363 = await crypto.subtle.sign({\n        name: \"ECDSA\",\n        hash: \"SHA-256\",\n    }, key, new TextEncoder().encode(content));\n    const signatureDer = convertEcdsaIeee1363ToDer(new Uint8Array(signatureIeee1363));\n    return (0,_turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayToHexString)(signatureDer);\n}\n/**\n * `SubtleCrypto.sign(...)` outputs signature in IEEE P1363 format:\n * - https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/sign#ecdsa\n *\n * Turnkey expects the signature encoding to be DER-encoded ASN.1:\n * - https://github.com/tkhq/tkcli/blob/7f0159af5a73387ff050647180d1db4d3a3aa033/src/internal/apikey/apikey.go#L149\n *\n * Code modified from https://github.com/google/tink/blob/6f74b99a2bfe6677e3670799116a57268fd067fa/javascript/subtle/elliptic_curves.ts#L114\n *\n * Transform an ECDSA signature in IEEE 1363 encoding to DER encoding.\n *\n * @param ieee the ECDSA signature in IEEE encoding\n * @return ECDSA signature in DER encoding\n */\nfunction convertEcdsaIeee1363ToDer(ieee) {\n    if (ieee.length % 2 != 0 || ieee.length == 0 || ieee.length > 132) {\n        throw new Error(\"Invalid IEEE P1363 signature encoding. Length: \" + ieee.length);\n    }\n    const r = toUnsignedBigNum(ieee.subarray(0, ieee.length / 2));\n    const s = toUnsignedBigNum(ieee.subarray(ieee.length / 2, ieee.length));\n    let offset = 0;\n    const length = 1 + 1 + r.length + 1 + 1 + s.length;\n    let der;\n    if (length >= 128) {\n        der = new Uint8Array(length + 3);\n        der[offset++] = 48;\n        der[offset++] = 128 + 1;\n        der[offset++] = length;\n    }\n    else {\n        der = new Uint8Array(length + 2);\n        der[offset++] = 48;\n        der[offset++] = length;\n    }\n    der[offset++] = 2;\n    der[offset++] = r.length;\n    der.set(r, offset);\n    offset += r.length;\n    der[offset++] = 2;\n    der[offset++] = s.length;\n    der.set(s, offset);\n    return der;\n}\n/**\n * Code modified from https://github.com/google/tink/blob/6f74b99a2bfe6677e3670799116a57268fd067fa/javascript/subtle/elliptic_curves.ts#L311\n *\n * Transform a big integer in big endian to minimal unsigned form which has\n * no extra zero at the beginning except when the highest bit is set.\n */\nfunction toUnsignedBigNum(bytes) {\n    // Remove zero prefixes.\n    let start = 0;\n    while (start < bytes.length && bytes[start] == 0) {\n        start++;\n    }\n    if (start == bytes.length) {\n        start = bytes.length - 1;\n    }\n    let extraZero = 0;\n    // If the 1st bit is not zero, add 1 zero byte.\n    if ((bytes[start] & 128) == 128) {\n        // Add extra zero.\n        extraZero = 1;\n    }\n    const res = new Uint8Array(bytes.length - start + extraZero);\n    res.set(bytes.subarray(start), extraZero);\n    return res;\n}\n\n\n//# sourceMappingURL=webcrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdHVybmtleS9hcGkta2V5LXN0YW1wZXIvZGlzdC93ZWJjcnlwdG8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RDtBQUNFOztBQUUxRDtBQUNBO0FBQ0EsWUFBWSxpQ0FBaUM7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLCtCQUErQixjQUFjO0FBQzdDO0FBQ0E7QUFDQSxZQUFZLG9EQUFvRDtBQUNoRSxnQkFBZ0IscUVBQXlCO0FBQ3pDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxlQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFdBQVcsd0VBQXFCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEI7QUFDMUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2FjaGFcXFRlc3RcXGV0aGdsXFxub2RlX21vZHVsZXNcXEB0dXJua2V5XFxhcGkta2V5LXN0YW1wZXJcXGRpc3RcXHdlYmNyeXB0by5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29udmVydFR1cm5rZXlBcGlLZXlUb0p3ayB9IGZyb20gJy4vdXRpbHMubWpzJztcbmltcG9ydCB7IHVpbnQ4QXJyYXlUb0hleFN0cmluZyB9IGZyb20gJ0B0dXJua2V5L2VuY29kaW5nJztcblxuLy8vIDxyZWZlcmVuY2UgbGliPVwiZG9tXCIgLz5cbmNvbnN0IHNpZ25XaXRoQXBpS2V5ID0gYXN5bmMgKGlucHV0KSA9PiB7XG4gICAgY29uc3QgeyBjb250ZW50LCBwdWJsaWNLZXksIHByaXZhdGVLZXkgfSA9IGlucHV0O1xuICAgIGNvbnN0IGtleSA9IGF3YWl0IGltcG9ydFR1cm5rZXlBcGlLZXkoe1xuICAgICAgICB1bmNvbXByZXNzZWRQcml2YXRlS2V5SGV4OiBwcml2YXRlS2V5LFxuICAgICAgICBjb21wcmVzc2VkUHVibGljS2V5SGV4OiBwdWJsaWNLZXksXG4gICAgfSk7XG4gICAgcmV0dXJuIGF3YWl0IHNpZ25NZXNzYWdlKHsga2V5LCBjb250ZW50IH0pO1xufTtcbmFzeW5jIGZ1bmN0aW9uIGltcG9ydFR1cm5rZXlBcGlLZXkoaW5wdXQpIHtcbiAgICBjb25zdCB7IHVuY29tcHJlc3NlZFByaXZhdGVLZXlIZXgsIGNvbXByZXNzZWRQdWJsaWNLZXlIZXggfSA9IGlucHV0O1xuICAgIGNvbnN0IGp3ayA9IGNvbnZlcnRUdXJua2V5QXBpS2V5VG9Kd2soe1xuICAgICAgICB1bmNvbXByZXNzZWRQcml2YXRlS2V5SGV4LFxuICAgICAgICBjb21wcmVzc2VkUHVibGljS2V5SGV4LFxuICAgIH0pO1xuICAgIHJldHVybiBhd2FpdCBjcnlwdG8uc3VidGxlLmltcG9ydEtleShcImp3a1wiLCBqd2ssIHtcbiAgICAgICAgbmFtZTogXCJFQ0RTQVwiLFxuICAgICAgICBuYW1lZEN1cnZlOiBcIlAtMjU2XCIsXG4gICAgfSwgZmFsc2UsIC8vIG5vdCBleHRyYWN0YWJsZVxuICAgIFtcInNpZ25cIl0gLy8gYWxsb3cgc2lnbmluZ1xuICAgICk7XG59XG5hc3luYyBmdW5jdGlvbiBzaWduTWVzc2FnZShpbnB1dCkge1xuICAgIGNvbnN0IHsga2V5LCBjb250ZW50IH0gPSBpbnB1dDtcbiAgICBjb25zdCBzaWduYXR1cmVJZWVlMTM2MyA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuc2lnbih7XG4gICAgICAgIG5hbWU6IFwiRUNEU0FcIixcbiAgICAgICAgaGFzaDogXCJTSEEtMjU2XCIsXG4gICAgfSwga2V5LCBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoY29udGVudCkpO1xuICAgIGNvbnN0IHNpZ25hdHVyZURlciA9IGNvbnZlcnRFY2RzYUllZWUxMzYzVG9EZXIobmV3IFVpbnQ4QXJyYXkoc2lnbmF0dXJlSWVlZTEzNjMpKTtcbiAgICByZXR1cm4gdWludDhBcnJheVRvSGV4U3RyaW5nKHNpZ25hdHVyZURlcik7XG59XG4vKipcbiAqIGBTdWJ0bGVDcnlwdG8uc2lnbiguLi4pYCBvdXRwdXRzIHNpZ25hdHVyZSBpbiBJRUVFIFAxMzYzIGZvcm1hdDpcbiAqIC0gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1N1YnRsZUNyeXB0by9zaWduI2VjZHNhXG4gKlxuICogVHVybmtleSBleHBlY3RzIHRoZSBzaWduYXR1cmUgZW5jb2RpbmcgdG8gYmUgREVSLWVuY29kZWQgQVNOLjE6XG4gKiAtIGh0dHBzOi8vZ2l0aHViLmNvbS90a2hxL3RrY2xpL2Jsb2IvN2YwMTU5YWY1YTczMzg3ZmYwNTA2NDcxODBkMWRiNGQzYTNhYTAzMy9zcmMvaW50ZXJuYWwvYXBpa2V5L2FwaWtleS5nbyNMMTQ5XG4gKlxuICogQ29kZSBtb2RpZmllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvdGluay9ibG9iLzZmNzRiOTlhMmJmZTY2NzdlMzY3MDc5OTExNmE1NzI2OGZkMDY3ZmEvamF2YXNjcmlwdC9zdWJ0bGUvZWxsaXB0aWNfY3VydmVzLnRzI0wxMTRcbiAqXG4gKiBUcmFuc2Zvcm0gYW4gRUNEU0Egc2lnbmF0dXJlIGluIElFRUUgMTM2MyBlbmNvZGluZyB0byBERVIgZW5jb2RpbmcuXG4gKlxuICogQHBhcmFtIGllZWUgdGhlIEVDRFNBIHNpZ25hdHVyZSBpbiBJRUVFIGVuY29kaW5nXG4gKiBAcmV0dXJuIEVDRFNBIHNpZ25hdHVyZSBpbiBERVIgZW5jb2RpbmdcbiAqL1xuZnVuY3Rpb24gY29udmVydEVjZHNhSWVlZTEzNjNUb0RlcihpZWVlKSB7XG4gICAgaWYgKGllZWUubGVuZ3RoICUgMiAhPSAwIHx8IGllZWUubGVuZ3RoID09IDAgfHwgaWVlZS5sZW5ndGggPiAxMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBJRUVFIFAxMzYzIHNpZ25hdHVyZSBlbmNvZGluZy4gTGVuZ3RoOiBcIiArIGllZWUubGVuZ3RoKTtcbiAgICB9XG4gICAgY29uc3QgciA9IHRvVW5zaWduZWRCaWdOdW0oaWVlZS5zdWJhcnJheSgwLCBpZWVlLmxlbmd0aCAvIDIpKTtcbiAgICBjb25zdCBzID0gdG9VbnNpZ25lZEJpZ051bShpZWVlLnN1YmFycmF5KGllZWUubGVuZ3RoIC8gMiwgaWVlZS5sZW5ndGgpKTtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBjb25zdCBsZW5ndGggPSAxICsgMSArIHIubGVuZ3RoICsgMSArIDEgKyBzLmxlbmd0aDtcbiAgICBsZXQgZGVyO1xuICAgIGlmIChsZW5ndGggPj0gMTI4KSB7XG4gICAgICAgIGRlciA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCArIDMpO1xuICAgICAgICBkZXJbb2Zmc2V0KytdID0gNDg7XG4gICAgICAgIGRlcltvZmZzZXQrK10gPSAxMjggKyAxO1xuICAgICAgICBkZXJbb2Zmc2V0KytdID0gbGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZGVyID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoICsgMik7XG4gICAgICAgIGRlcltvZmZzZXQrK10gPSA0ODtcbiAgICAgICAgZGVyW29mZnNldCsrXSA9IGxlbmd0aDtcbiAgICB9XG4gICAgZGVyW29mZnNldCsrXSA9IDI7XG4gICAgZGVyW29mZnNldCsrXSA9IHIubGVuZ3RoO1xuICAgIGRlci5zZXQociwgb2Zmc2V0KTtcbiAgICBvZmZzZXQgKz0gci5sZW5ndGg7XG4gICAgZGVyW29mZnNldCsrXSA9IDI7XG4gICAgZGVyW29mZnNldCsrXSA9IHMubGVuZ3RoO1xuICAgIGRlci5zZXQocywgb2Zmc2V0KTtcbiAgICByZXR1cm4gZGVyO1xufVxuLyoqXG4gKiBDb2RlIG1vZGlmaWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS90aW5rL2Jsb2IvNmY3NGI5OWEyYmZlNjY3N2UzNjcwNzk5MTE2YTU3MjY4ZmQwNjdmYS9qYXZhc2NyaXB0L3N1YnRsZS9lbGxpcHRpY19jdXJ2ZXMudHMjTDMxMVxuICpcbiAqIFRyYW5zZm9ybSBhIGJpZyBpbnRlZ2VyIGluIGJpZyBlbmRpYW4gdG8gbWluaW1hbCB1bnNpZ25lZCBmb3JtIHdoaWNoIGhhc1xuICogbm8gZXh0cmEgemVybyBhdCB0aGUgYmVnaW5uaW5nIGV4Y2VwdCB3aGVuIHRoZSBoaWdoZXN0IGJpdCBpcyBzZXQuXG4gKi9cbmZ1bmN0aW9uIHRvVW5zaWduZWRCaWdOdW0oYnl0ZXMpIHtcbiAgICAvLyBSZW1vdmUgemVybyBwcmVmaXhlcy5cbiAgICBsZXQgc3RhcnQgPSAwO1xuICAgIHdoaWxlIChzdGFydCA8IGJ5dGVzLmxlbmd0aCAmJiBieXRlc1tzdGFydF0gPT0gMCkge1xuICAgICAgICBzdGFydCsrO1xuICAgIH1cbiAgICBpZiAoc3RhcnQgPT0gYnl0ZXMubGVuZ3RoKSB7XG4gICAgICAgIHN0YXJ0ID0gYnl0ZXMubGVuZ3RoIC0gMTtcbiAgICB9XG4gICAgbGV0IGV4dHJhWmVybyA9IDA7XG4gICAgLy8gSWYgdGhlIDFzdCBiaXQgaXMgbm90IHplcm8sIGFkZCAxIHplcm8gYnl0ZS5cbiAgICBpZiAoKGJ5dGVzW3N0YXJ0XSAmIDEyOCkgPT0gMTI4KSB7XG4gICAgICAgIC8vIEFkZCBleHRyYSB6ZXJvLlxuICAgICAgICBleHRyYVplcm8gPSAxO1xuICAgIH1cbiAgICBjb25zdCByZXMgPSBuZXcgVWludDhBcnJheShieXRlcy5sZW5ndGggLSBzdGFydCArIGV4dHJhWmVybyk7XG4gICAgcmVzLnNldChieXRlcy5zdWJhcnJheShzdGFydCksIGV4dHJhWmVybyk7XG4gICAgcmV0dXJuIHJlcztcbn1cblxuZXhwb3J0IHsgc2lnbldpdGhBcGlLZXkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdlYmNyeXB0by5tanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/webcrypto.mjs\n"));

/***/ })

}]);
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_turnkey_api-key-stamper_dist_webcrypto_mjs"],{

/***/ "(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/utils.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@turnkey/api-key-stamper/dist/utils.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertTurnkeyApiKeyToJwk: () => (/* binding */ convertTurnkeyApiKeyToJwk)\n/* harmony export */ });\n/* harmony import */ var _tink_elliptic_curves_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tink/elliptic_curves.mjs */ \"(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/tink/elliptic_curves.mjs\");\n/* harmony import */ var _turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turnkey/encoding */ \"(app-pages-browser)/./node_modules/@turnkey/encoding/dist/index.mjs\");\n\n\n\nfunction convertTurnkeyApiKeyToJwk(input) {\n    const { uncompressedPrivateKeyHex, compressedPublicKeyHex } = input;\n    const jwk = (0,_tink_elliptic_curves_mjs__WEBPACK_IMPORTED_MODULE_0__.pointDecode)((0,_turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayFromHexString)(compressedPublicKeyHex));\n    // Ensure that d is sufficiently padded\n    jwk.d = (0,_turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__.hexStringToBase64url)(uncompressedPrivateKeyHex, _turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_JWK_MEMBER_BYTE_LENGTH);\n    return jwk;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdHVybmtleS9hcGkta2V5LXN0YW1wZXIvZGlzdC91dGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlEO0FBQ3lEOztBQUVsSDtBQUNBLFlBQVksb0RBQW9EO0FBQ2hFLGdCQUFnQixzRUFBVyxDQUFDLDBFQUF1QjtBQUNuRDtBQUNBLFlBQVksdUVBQW9CLDRCQUE0Qiw2RUFBOEI7QUFDMUY7QUFDQTs7QUFFcUM7QUFDckMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hL0Rlc2t0b3AvUFJPSkVUUy9oYWNrL2V0aGdsL25vZGVfbW9kdWxlcy9AdHVybmtleS9hcGkta2V5LXN0YW1wZXIvZGlzdC91dGlscy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcG9pbnREZWNvZGUgfSBmcm9tICcuL3RpbmsvZWxsaXB0aWNfY3VydmVzLm1qcyc7XG5pbXBvcnQgeyB1aW50OEFycmF5RnJvbUhleFN0cmluZywgaGV4U3RyaW5nVG9CYXNlNjR1cmwsIERFRkFVTFRfSldLX01FTUJFUl9CWVRFX0xFTkdUSCB9IGZyb20gJ0B0dXJua2V5L2VuY29kaW5nJztcblxuZnVuY3Rpb24gY29udmVydFR1cm5rZXlBcGlLZXlUb0p3ayhpbnB1dCkge1xuICAgIGNvbnN0IHsgdW5jb21wcmVzc2VkUHJpdmF0ZUtleUhleCwgY29tcHJlc3NlZFB1YmxpY0tleUhleCB9ID0gaW5wdXQ7XG4gICAgY29uc3QgandrID0gcG9pbnREZWNvZGUodWludDhBcnJheUZyb21IZXhTdHJpbmcoY29tcHJlc3NlZFB1YmxpY0tleUhleCkpO1xuICAgIC8vIEVuc3VyZSB0aGF0IGQgaXMgc3VmZmljaWVudGx5IHBhZGRlZFxuICAgIGp3ay5kID0gaGV4U3RyaW5nVG9CYXNlNjR1cmwodW5jb21wcmVzc2VkUHJpdmF0ZUtleUhleCwgREVGQVVMVF9KV0tfTUVNQkVSX0JZVEVfTEVOR1RIKTtcbiAgICByZXR1cm4gandrO1xufVxuXG5leHBvcnQgeyBjb252ZXJ0VHVybmtleUFwaUtleVRvSndrIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/utils.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/webcrypto.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@turnkey/api-key-stamper/dist/webcrypto.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signWithApiKey: () => (/* binding */ signWithApiKey)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/utils.mjs\");\n/* harmony import */ var _turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turnkey/encoding */ \"(app-pages-browser)/./node_modules/@turnkey/encoding/dist/index.mjs\");\n\n\n\n/// <reference lib=\"dom\" />\nconst signWithApiKey = async (input) => {\n    const { content, publicKey, privateKey } = input;\n    const key = await importTurnkeyApiKey({\n        uncompressedPrivateKeyHex: privateKey,\n        compressedPublicKeyHex: publicKey,\n    });\n    return await signMessage({ key, content });\n};\nasync function importTurnkeyApiKey(input) {\n    const { uncompressedPrivateKeyHex, compressedPublicKeyHex } = input;\n    const jwk = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.convertTurnkeyApiKeyToJwk)({\n        uncompressedPrivateKeyHex,\n        compressedPublicKeyHex,\n    });\n    return await crypto.subtle.importKey(\"jwk\", jwk, {\n        name: \"ECDSA\",\n        namedCurve: \"P-256\",\n    }, false, // not extractable\n    [\"sign\"] // allow signing\n    );\n}\nasync function signMessage(input) {\n    const { key, content } = input;\n    const signatureIeee1363 = await crypto.subtle.sign({\n        name: \"ECDSA\",\n        hash: \"SHA-256\",\n    }, key, new TextEncoder().encode(content));\n    const signatureDer = convertEcdsaIeee1363ToDer(new Uint8Array(signatureIeee1363));\n    return (0,_turnkey_encoding__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayToHexString)(signatureDer);\n}\n/**\n * `SubtleCrypto.sign(...)` outputs signature in IEEE P1363 format:\n * - https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/sign#ecdsa\n *\n * Turnkey expects the signature encoding to be DER-encoded ASN.1:\n * - https://github.com/tkhq/tkcli/blob/7f0159af5a73387ff050647180d1db4d3a3aa033/src/internal/apikey/apikey.go#L149\n *\n * Code modified from https://github.com/google/tink/blob/6f74b99a2bfe6677e3670799116a57268fd067fa/javascript/subtle/elliptic_curves.ts#L114\n *\n * Transform an ECDSA signature in IEEE 1363 encoding to DER encoding.\n *\n * @param ieee the ECDSA signature in IEEE encoding\n * @return ECDSA signature in DER encoding\n */\nfunction convertEcdsaIeee1363ToDer(ieee) {\n    if (ieee.length % 2 != 0 || ieee.length == 0 || ieee.length > 132) {\n        throw new Error(\"Invalid IEEE P1363 signature encoding. Length: \" + ieee.length);\n    }\n    const r = toUnsignedBigNum(ieee.subarray(0, ieee.length / 2));\n    const s = toUnsignedBigNum(ieee.subarray(ieee.length / 2, ieee.length));\n    let offset = 0;\n    const length = 1 + 1 + r.length + 1 + 1 + s.length;\n    let der;\n    if (length >= 128) {\n        der = new Uint8Array(length + 3);\n        der[offset++] = 48;\n        der[offset++] = 128 + 1;\n        der[offset++] = length;\n    }\n    else {\n        der = new Uint8Array(length + 2);\n        der[offset++] = 48;\n        der[offset++] = length;\n    }\n    der[offset++] = 2;\n    der[offset++] = r.length;\n    der.set(r, offset);\n    offset += r.length;\n    der[offset++] = 2;\n    der[offset++] = s.length;\n    der.set(s, offset);\n    return der;\n}\n/**\n * Code modified from https://github.com/google/tink/blob/6f74b99a2bfe6677e3670799116a57268fd067fa/javascript/subtle/elliptic_curves.ts#L311\n *\n * Transform a big integer in big endian to minimal unsigned form which has\n * no extra zero at the beginning except when the highest bit is set.\n */\nfunction toUnsignedBigNum(bytes) {\n    // Remove zero prefixes.\n    let start = 0;\n    while (start < bytes.length && bytes[start] == 0) {\n        start++;\n    }\n    if (start == bytes.length) {\n        start = bytes.length - 1;\n    }\n    let extraZero = 0;\n    // If the 1st bit is not zero, add 1 zero byte.\n    if ((bytes[start] & 128) == 128) {\n        // Add extra zero.\n        extraZero = 1;\n    }\n    const res = new Uint8Array(bytes.length - start + extraZero);\n    res.set(bytes.subarray(start), extraZero);\n    return res;\n}\n\n\n//# sourceMappingURL=webcrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdHVybmtleS9hcGkta2V5LXN0YW1wZXIvZGlzdC93ZWJjcnlwdG8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RDtBQUNFOztBQUUxRDtBQUNBO0FBQ0EsWUFBWSxpQ0FBaUM7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLCtCQUErQixjQUFjO0FBQzdDO0FBQ0E7QUFDQSxZQUFZLG9EQUFvRDtBQUNoRSxnQkFBZ0IscUVBQXlCO0FBQ3pDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxlQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFdBQVcsd0VBQXFCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEI7QUFDMUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hL0Rlc2t0b3AvUFJPSkVUUy9oYWNrL2V0aGdsL25vZGVfbW9kdWxlcy9AdHVybmtleS9hcGkta2V5LXN0YW1wZXIvZGlzdC93ZWJjcnlwdG8ubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnZlcnRUdXJua2V5QXBpS2V5VG9Kd2sgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5pbXBvcnQgeyB1aW50OEFycmF5VG9IZXhTdHJpbmcgfSBmcm9tICdAdHVybmtleS9lbmNvZGluZyc7XG5cbi8vLyA8cmVmZXJlbmNlIGxpYj1cImRvbVwiIC8+XG5jb25zdCBzaWduV2l0aEFwaUtleSA9IGFzeW5jIChpbnB1dCkgPT4ge1xuICAgIGNvbnN0IHsgY29udGVudCwgcHVibGljS2V5LCBwcml2YXRlS2V5IH0gPSBpbnB1dDtcbiAgICBjb25zdCBrZXkgPSBhd2FpdCBpbXBvcnRUdXJua2V5QXBpS2V5KHtcbiAgICAgICAgdW5jb21wcmVzc2VkUHJpdmF0ZUtleUhleDogcHJpdmF0ZUtleSxcbiAgICAgICAgY29tcHJlc3NlZFB1YmxpY0tleUhleDogcHVibGljS2V5LFxuICAgIH0pO1xuICAgIHJldHVybiBhd2FpdCBzaWduTWVzc2FnZSh7IGtleSwgY29udGVudCB9KTtcbn07XG5hc3luYyBmdW5jdGlvbiBpbXBvcnRUdXJua2V5QXBpS2V5KGlucHV0KSB7XG4gICAgY29uc3QgeyB1bmNvbXByZXNzZWRQcml2YXRlS2V5SGV4LCBjb21wcmVzc2VkUHVibGljS2V5SGV4IH0gPSBpbnB1dDtcbiAgICBjb25zdCBqd2sgPSBjb252ZXJ0VHVybmtleUFwaUtleVRvSndrKHtcbiAgICAgICAgdW5jb21wcmVzc2VkUHJpdmF0ZUtleUhleCxcbiAgICAgICAgY29tcHJlc3NlZFB1YmxpY0tleUhleCxcbiAgICB9KTtcbiAgICByZXR1cm4gYXdhaXQgY3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkoXCJqd2tcIiwgandrLCB7XG4gICAgICAgIG5hbWU6IFwiRUNEU0FcIixcbiAgICAgICAgbmFtZWRDdXJ2ZTogXCJQLTI1NlwiLFxuICAgIH0sIGZhbHNlLCAvLyBub3QgZXh0cmFjdGFibGVcbiAgICBbXCJzaWduXCJdIC8vIGFsbG93IHNpZ25pbmdcbiAgICApO1xufVxuYXN5bmMgZnVuY3Rpb24gc2lnbk1lc3NhZ2UoaW5wdXQpIHtcbiAgICBjb25zdCB7IGtleSwgY29udGVudCB9ID0gaW5wdXQ7XG4gICAgY29uc3Qgc2lnbmF0dXJlSWVlZTEzNjMgPSBhd2FpdCBjcnlwdG8uc3VidGxlLnNpZ24oe1xuICAgICAgICBuYW1lOiBcIkVDRFNBXCIsXG4gICAgICAgIGhhc2g6IFwiU0hBLTI1NlwiLFxuICAgIH0sIGtleSwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGNvbnRlbnQpKTtcbiAgICBjb25zdCBzaWduYXR1cmVEZXIgPSBjb252ZXJ0RWNkc2FJZWVlMTM2M1RvRGVyKG5ldyBVaW50OEFycmF5KHNpZ25hdHVyZUllZWUxMzYzKSk7XG4gICAgcmV0dXJuIHVpbnQ4QXJyYXlUb0hleFN0cmluZyhzaWduYXR1cmVEZXIpO1xufVxuLyoqXG4gKiBgU3VidGxlQ3J5cHRvLnNpZ24oLi4uKWAgb3V0cHV0cyBzaWduYXR1cmUgaW4gSUVFRSBQMTM2MyBmb3JtYXQ6XG4gKiAtIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9TdWJ0bGVDcnlwdG8vc2lnbiNlY2RzYVxuICpcbiAqIFR1cm5rZXkgZXhwZWN0cyB0aGUgc2lnbmF0dXJlIGVuY29kaW5nIHRvIGJlIERFUi1lbmNvZGVkIEFTTi4xOlxuICogLSBodHRwczovL2dpdGh1Yi5jb20vdGtocS90a2NsaS9ibG9iLzdmMDE1OWFmNWE3MzM4N2ZmMDUwNjQ3MTgwZDFkYjRkM2EzYWEwMzMvc3JjL2ludGVybmFsL2FwaWtleS9hcGlrZXkuZ28jTDE0OVxuICpcbiAqIENvZGUgbW9kaWZpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL3RpbmsvYmxvYi82Zjc0Yjk5YTJiZmU2Njc3ZTM2NzA3OTkxMTZhNTcyNjhmZDA2N2ZhL2phdmFzY3JpcHQvc3VidGxlL2VsbGlwdGljX2N1cnZlcy50cyNMMTE0XG4gKlxuICogVHJhbnNmb3JtIGFuIEVDRFNBIHNpZ25hdHVyZSBpbiBJRUVFIDEzNjMgZW5jb2RpbmcgdG8gREVSIGVuY29kaW5nLlxuICpcbiAqIEBwYXJhbSBpZWVlIHRoZSBFQ0RTQSBzaWduYXR1cmUgaW4gSUVFRSBlbmNvZGluZ1xuICogQHJldHVybiBFQ0RTQSBzaWduYXR1cmUgaW4gREVSIGVuY29kaW5nXG4gKi9cbmZ1bmN0aW9uIGNvbnZlcnRFY2RzYUllZWUxMzYzVG9EZXIoaWVlZSkge1xuICAgIGlmIChpZWVlLmxlbmd0aCAlIDIgIT0gMCB8fCBpZWVlLmxlbmd0aCA9PSAwIHx8IGllZWUubGVuZ3RoID4gMTMyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgSUVFRSBQMTM2MyBzaWduYXR1cmUgZW5jb2RpbmcuIExlbmd0aDogXCIgKyBpZWVlLmxlbmd0aCk7XG4gICAgfVxuICAgIGNvbnN0IHIgPSB0b1Vuc2lnbmVkQmlnTnVtKGllZWUuc3ViYXJyYXkoMCwgaWVlZS5sZW5ndGggLyAyKSk7XG4gICAgY29uc3QgcyA9IHRvVW5zaWduZWRCaWdOdW0oaWVlZS5zdWJhcnJheShpZWVlLmxlbmd0aCAvIDIsIGllZWUubGVuZ3RoKSk7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgY29uc3QgbGVuZ3RoID0gMSArIDEgKyByLmxlbmd0aCArIDEgKyAxICsgcy5sZW5ndGg7XG4gICAgbGV0IGRlcjtcbiAgICBpZiAobGVuZ3RoID49IDEyOCkge1xuICAgICAgICBkZXIgPSBuZXcgVWludDhBcnJheShsZW5ndGggKyAzKTtcbiAgICAgICAgZGVyW29mZnNldCsrXSA9IDQ4O1xuICAgICAgICBkZXJbb2Zmc2V0KytdID0gMTI4ICsgMTtcbiAgICAgICAgZGVyW29mZnNldCsrXSA9IGxlbmd0aDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGRlciA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCArIDIpO1xuICAgICAgICBkZXJbb2Zmc2V0KytdID0gNDg7XG4gICAgICAgIGRlcltvZmZzZXQrK10gPSBsZW5ndGg7XG4gICAgfVxuICAgIGRlcltvZmZzZXQrK10gPSAyO1xuICAgIGRlcltvZmZzZXQrK10gPSByLmxlbmd0aDtcbiAgICBkZXIuc2V0KHIsIG9mZnNldCk7XG4gICAgb2Zmc2V0ICs9IHIubGVuZ3RoO1xuICAgIGRlcltvZmZzZXQrK10gPSAyO1xuICAgIGRlcltvZmZzZXQrK10gPSBzLmxlbmd0aDtcbiAgICBkZXIuc2V0KHMsIG9mZnNldCk7XG4gICAgcmV0dXJuIGRlcjtcbn1cbi8qKlxuICogQ29kZSBtb2RpZmllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvdGluay9ibG9iLzZmNzRiOTlhMmJmZTY2NzdlMzY3MDc5OTExNmE1NzI2OGZkMDY3ZmEvamF2YXNjcmlwdC9zdWJ0bGUvZWxsaXB0aWNfY3VydmVzLnRzI0wzMTFcbiAqXG4gKiBUcmFuc2Zvcm0gYSBiaWcgaW50ZWdlciBpbiBiaWcgZW5kaWFuIHRvIG1pbmltYWwgdW5zaWduZWQgZm9ybSB3aGljaCBoYXNcbiAqIG5vIGV4dHJhIHplcm8gYXQgdGhlIGJlZ2lubmluZyBleGNlcHQgd2hlbiB0aGUgaGlnaGVzdCBiaXQgaXMgc2V0LlxuICovXG5mdW5jdGlvbiB0b1Vuc2lnbmVkQmlnTnVtKGJ5dGVzKSB7XG4gICAgLy8gUmVtb3ZlIHplcm8gcHJlZml4ZXMuXG4gICAgbGV0IHN0YXJ0ID0gMDtcbiAgICB3aGlsZSAoc3RhcnQgPCBieXRlcy5sZW5ndGggJiYgYnl0ZXNbc3RhcnRdID09IDApIHtcbiAgICAgICAgc3RhcnQrKztcbiAgICB9XG4gICAgaWYgKHN0YXJ0ID09IGJ5dGVzLmxlbmd0aCkge1xuICAgICAgICBzdGFydCA9IGJ5dGVzLmxlbmd0aCAtIDE7XG4gICAgfVxuICAgIGxldCBleHRyYVplcm8gPSAwO1xuICAgIC8vIElmIHRoZSAxc3QgYml0IGlzIG5vdCB6ZXJvLCBhZGQgMSB6ZXJvIGJ5dGUuXG4gICAgaWYgKChieXRlc1tzdGFydF0gJiAxMjgpID09IDEyOCkge1xuICAgICAgICAvLyBBZGQgZXh0cmEgemVyby5cbiAgICAgICAgZXh0cmFaZXJvID0gMTtcbiAgICB9XG4gICAgY29uc3QgcmVzID0gbmV3IFVpbnQ4QXJyYXkoYnl0ZXMubGVuZ3RoIC0gc3RhcnQgKyBleHRyYVplcm8pO1xuICAgIHJlcy5zZXQoYnl0ZXMuc3ViYXJyYXkoc3RhcnQpLCBleHRyYVplcm8pO1xuICAgIHJldHVybiByZXM7XG59XG5cbmV4cG9ydCB7IHNpZ25XaXRoQXBpS2V5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJjcnlwdG8ubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@turnkey/api-key-stamper/dist/webcrypto.mjs\n"));

/***/ })

}]);